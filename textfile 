// disable-button-link.directive.ts
import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';

@Directive({
  selector: '[appDisableButtonLink]'
})
export class DisableButtonLinkDirective implements OnInit {
  @Input('appDisableButtonLink') isDisabled = true;

  constructor(private el: ElementRef, private renderer: Renderer2) {}

  ngOnInit(): void {
    if (this.isDisabled) {
      const element = this.el.nativeElement as HTMLElement;

      // Change opacity of the div
      this.renderer.setStyle(element, 'opacity', '0.5');

      // Disable buttons and links only
      const children = element.querySelectorAll('button, a');
      children.forEach((child: HTMLElement) => {
        this.renderer.setStyle(child, 'pointer-events', 'none');
        this.renderer.setAttribute(child, 'aria-disabled', 'true');

        // Optional: visually indicate disable for button
        if (child.tagName.toLowerCase() === 'button') {
          this.renderer.setAttribute(child, 'disabled', 'true');
        }
      });
    }
  }
}