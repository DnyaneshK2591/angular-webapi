import _ from "lodash";

function normalize(obj: any): any {
  // Sort sections, parameters, and data to avoid index-based differences
  if (Array.isArray(obj)) {
    return obj.map(normalize).sort((a, b) => JSON.stringify(a).localeCompare(JSON.stringify(b)));
  } else if (_.isObject(obj)) {
    const sortedObj: any = {};
    Object.keys(obj).sort().forEach(k => {
      sortedObj[k] = normalize(obj[k]);
    });
    return sortedObj;
  }
  return obj;
}

function hasUnsavedChanges(oldData: any, newData: any): boolean {
  return !_.isEqual(normalize(oldData), normalize(newData));
}

// âœ… Usage
const isChanged = hasUnsavedChanges(oldReviewSections, newReviewSections);
if (isChanged) {
  console.log("Unsaved changes detected!");
}