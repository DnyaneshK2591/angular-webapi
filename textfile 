import { Directive, ElementRef, HostListener, Output, EventEmitter } from '@angular/core';

@Directive({
  selector: '[appDetectChanges]'
})
export class DetectChangesDirective {
  @Output() changeDetected = new EventEmitter<void>();

  private emitChange() {
    this.changeDetected.emit();
  }

  // Detect button and anchor clicks
  @HostListener('click', ['$event'])
  handleClick(event: Event) {
    const target = event.target as HTMLElement;
    const tagName = target.tagName.toLowerCase();

    if (['button', 'a'].includes(tagName)) {
      this.emitChange();
    }
  }

  // Detect input changes (checkbox, radio, text, etc.)
  @HostListener('input', ['$event'])
  handleInput(event: Event) {
    const target = event.target as HTMLInputElement;
    if (['checkbox', 'radio', 'text', 'number', 'email', 'password'].includes(target.type)) {
      this.emitChange();
    }
  }

  // Detect select (dropdown) changes
  @HostListener('change', ['$event'])
  handleChange(event: Event) {
    const target = event.target as HTMLElement;
    if (target.tagName.toLowerCase() === 'select') {
      this.emitChange();
    }
  }
}