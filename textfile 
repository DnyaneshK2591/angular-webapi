// disable-button.directive.ts
import {
  Directive,
  ElementRef,
  Input,
  Renderer2,
  OnChanges,
  SimpleChanges
} from '@angular/core';

@Directive({
  selector: '[appDisableButton]'
})
export class DisableButtonDirective implements OnChanges {
  @Input('appDisableButton') isDisabled = false;

  constructor(private el: ElementRef, private renderer: Renderer2) {}

  ngOnChanges(changes: SimpleChanges): void {
    if (changes['isDisabled']) {
      this.setDisabledState(this.isDisabled);
    }
  }

  private setDisabledState(isDisabled: boolean): void {
    const element = this.el.nativeElement;

    if (isDisabled) {
      this.renderer.setAttribute(element, 'disabled', 'true');
      this.renderer.setStyle(element, 'opacity', '0.6');
      this.renderer.setStyle(element, 'cursor', 'not-allowed');
    } else {
      this.renderer.removeAttribute(element, 'disabled');
      this.renderer.removeStyle(element, 'opacity');
      this.renderer.removeStyle(element, 'cursor');
    }
  }
}