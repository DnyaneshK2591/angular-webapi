import { Injectable } from '@angular/core';
import { Router, NavigationStart } from '@angular/router';

@Injectable({ providedIn: 'root' })
export class BrowserRefreshHelperService {
  private browserReload = false;
  private coldLoad = false;
  private routeNavigation = false;
  private initialized = false;

  constructor(private router: Router) {
    // Step 1: Read nav type from sessionStorage
    const navType = sessionStorage.getItem('creditreview-nav-type');
    sessionStorage.removeItem('creditreview-nav-type'); // clear after read

    if (navType === 'reload') {
      this.browserReload = true;
      console.log('üåÄ Browser reload detected');
    } else if (navType === 'cold') {
      this.coldLoad = true;
      console.log('üåê Cold load detected');
    } else {
      // This could happen if main.ts missed setting sessionStorage
      console.log('‚ö†Ô∏è Unknown load type');
    }

    this.initialized = true;

    // Step 2: Listen to future internal navigations
    this.router.events.subscribe(event => {
      if (event instanceof NavigationStart && this.initialized) {
        this.routeNavigation = true;
        this.browserReload = false;
        this.coldLoad = false;
        console.log('‚û°Ô∏è Internal navigation detected');
      }
    });
  }

  wasBrowserReload(): boolean {
    return this.browserReload;
  }

  wasColdLoad(): boolean {
    return this.coldLoad;
  }

  wasRouteNavigation(): boolean {
    return this.routeNavigation;
  }
}