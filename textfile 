// browser-refresh-helper.service.ts
import { Injectable } from '@angular/core';
import { Router, NavigationStart } from '@angular/router';

@Injectable({ providedIn: 'root' })
export class BrowserRefreshHelperService {
  private browserReload = false;
  private coldLoad = false;
  private internalNavigation = false;
  private initialized = false;

  constructor(private router: Router) {
    const navType = sessionStorage.getItem('creditreview-nav-type');
    sessionStorage.removeItem('creditreview-nav-type'); // Clear after reading

    if (navType === 'reload') {
      this.browserReload = true;
      console.log('üîÑ Browser reload detected');
    } else if (navType === 'cold') {
      this.coldLoad = true;
      console.log('üßä Cold load detected');
    } else {
      console.log('‚ö†Ô∏è Unknown navigation type (may be internal)');
    }

    this.initialized = true;

    // Listen for internal navigations (after load)
    this.router.events.subscribe((event) => {
      if (event instanceof NavigationStart && this.initialized) {
        this.browserReload = false;
        this.coldLoad = false;
        this.internalNavigation = true;
        console.log('‚û°Ô∏è Internal navigation detected');
      }
    });
  }

  // Accessors
  wasBrowserReload(): boolean {
    return this.browserReload;
  }

  wasColdLoad(): boolean {
    return this.coldLoad;
  }

  wasRouteNavigation(): boolean {
    return this.internalNavigation;
  }

  logStatus() {
    console.log('[RefreshHelper] Status', {
      reload: this.browserReload,
      cold: this.coldLoad,
      internal: this.internalNavigation,
    });
  }
}