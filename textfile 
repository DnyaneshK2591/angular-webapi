import { Directive, ElementRef, Input, OnChanges, Renderer2, SimpleChanges } from '@angular/core';

@Directive({
  selector: '[appDisableButtonsAndLinks]'
})
export class DisableButtonsAndLinksDirective implements OnChanges {
  @Input('appDisableButtonsAndLinks') isDisabled: boolean = false;

  constructor(private el: ElementRef, private renderer: Renderer2) {}

  ngOnChanges(changes: SimpleChanges): void {
    const nativeEl = this.el.nativeElement;
    const buttons = nativeEl.querySelectorAll('button, a');

    buttons.forEach((btn: HTMLElement) => {
      if (this.isDisabled) {
        this.renderer.setAttribute(btn, 'disabled', 'true');

        // For <a> tags, prevent clicks and make visually disabled
        if (btn.tagName.toLowerCase() === 'a') {
          this.renderer.setStyle(btn, 'pointer-events', 'none');
          this.renderer.setStyle(btn, 'opacity', '0.5');
        }
      } else {
        this.renderer.removeAttribute(btn, 'disabled');

        if (btn.tagName.toLowerCase() === 'a') {
          this.renderer.setStyle(btn, 'pointer-events', 'auto');
          this.renderer.removeStyle(btn, 'opacity');
        }
      }
    });
  }
}